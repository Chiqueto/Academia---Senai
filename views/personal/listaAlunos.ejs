<!DOCTYPE html>
<html>
  <head>
    <meta lang="pt-br" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="/styles/output.css" rel="stylesheet" />
    <title>Lista de Alunos</title>
  </head>

  <body class="flex flex-col min-h-screen">
    <header>
      <nav class="flex justify-between bg-zinc-800 py-5 px-4">
        <div class="flex items-center gap-4">
          <a href="/personal/menu/"><img src="/icons/back_arrow.svg" /></a>
          <h1 class="font-jaro text-zinc-50 text-3xl">GymFit</h1>
        </div>
      </nav>
    </header> 
    <main class=" mx-4 flex-grow"><!--Começo do perfil-->
      <section class="font-zain  px-4">
          <h2 class="text-3xl text-center text-white py-2">Lista de Alunos</h2>
          <div class="relative w-full ">
            <!--<input type="text" placeholder="Pesquisar pelo nome do personal..."
              class="w-full py-1 pl-10 pr-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-gray-700 placeholder-gray-400">
            <div class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none">
              <img src="/icons/lupa.svg" class="w-5 h-5">
            </div>
          </div> -->
          <div class="relative w-full mb-4">
            <label for="genderFilter" class="block text-gray-700 font-semibold mb-2">Filtrar por gênero:</label>
            <select id="genderFilter" class="w-full py-2 pl-3 pr-4 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option value="all">Todos</option>
              <option value="M">Masculino</option>
              <option value="F">Feminino</option>
            </select>
          </div><br>
          
            <% if (alunos && alunos.length > 0) { %>
              <% alunos.forEach(aluno => { %>
                <a href="/personal/<%= id_personal %>/perfilAluno/<%= aluno.id %>">
                <div data-gender="<%= aluno.genero %>" class="container bg-white rounded-lg flex items-center p-3 shadow-md w-auto mb-2">
                  <div class="rounded-full bg-pink-200 flex-shrink-0 w-10 h-10">
                    <img src="/icons/user.svg" class="w-10 h-8" alt="Usuário">
                  </div>
                  <span class="ml-4 text-2xl text-gray-900 font-semibold"><%= aluno.nome %></span>
                  <span class="ml-4 text-xl text-gray-900 ">Cod: <%= aluno.id %></span>
                  <button 
                  class="ml-auto px-4 py-2 rounded-lg"
                  onclick="removerAluno('<%= aluno.id %>')">
                 <img src="/icons/delete.svg" class="w-8 h-8">
                </button>
                </div></a>
              <% }) %>
            <% } else { %>
              <p class="text-gray-500">Nenhum aluno encontrado.</p>
            <% } %>
      </section>

          <div id="searchModal" class="hidden fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center">
            <div class="bg-white p-6 rounded-lg shadow-lg w-96">
              <button id="closeSearchModal" class="text-red-600 float-right font-bold">Fechar</button>
              <h3 class="text-xl font-semibold mb-4">Buscar Aluno</h3>
              <input
                type="text"
                id="searchInput"
                class="w-full p-2 border border-gray-300 rounded-md mb-4"
                placeholder="Buscar aluno..."
              />
              <ul id="searchResults" class="max-h-60 overflow-y-auto space-y-2">
                
              </ul>
            </div>
          </div>
          
          <button id="openSearchModal" class="mx-auto bg-neonGreen rounded-xl px-4 py-2 hover:bg-neonGreenHover transition-colors text-zinc-50 font-zain text-4xl">
          Adicionar
        </button>

        <script>
    document.getElementById('openSearchModal').addEventListener('click', () => {
      document.getElementById('searchModal').classList.remove('hidden');
    });

    document.getElementById('closeSearchModal').addEventListener('click', () => {
      document.getElementById('searchModal').classList.add('hidden');
    });

    // Buscar personais
    document.getElementById('searchInput').addEventListener('input', async (event) => {
      const query = event.target.value.trim();

  if (query.length > 1) {
    try {
      const response = await fetch(`/aluno/buscarAluno?nome=${query}`);
      const alunos = await response.json();

      const resultsList = document.getElementById('searchResults');
      resultsList.innerHTML = ''; 

      if (Array.isArray(alunos) && alunos.length > 0) {
        alunos.forEach((aluno) => {
          const li = document.createElement('li');
          li.classList.add('flex', 'justify-between', 'items-center', 'p-2', 'border-b');
          li.innerHTML = `
            <div class="flex items-center gap-2">
              <div class="rounded-full bg-pink-200 w-10 h-10 flex items-center justify-center">
                <img src="/icons/user.svg" class="w-7 h-8" alt="Usuário">
              </div>
              <span class="ml-4 text-2xl text-gray-900 font-semibold">${aluno.nome}</span>
              <span class="ml-4 text-xl text-gray-900 ">Cod: ${aluno.id}</span>
            </div>
            <button 
              class="bg-blue-500 text-white px-2 py-1 rounded" 
             onclick="adicionarAluno(${aluno.id})">
              Selecionar
            </button>
          `;

          resultsList.appendChild(li);
        });
      } else {
        resultsList.innerHTML = '<li>Nenhum aluno encontrado.</li>';
      }
    } catch (error) {
      console.error('Erro ao buscar alunos:', error);
    }
  }
});

// Inserir aluno
async function adicionarAluno(id_aluno) {
  try {
    const response = await fetch(`/personal/adicionarAluno/${id_personal}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ id_aluno }),
    });

    const result = await response.json();
    if (response.ok) {
      alert(result.message);
      location.reload();
    } else {
      console.error(result.error);
      alert('Erro ao adicionar aluno.');
    }
  } catch (error) {
    console.error('Erro:', error);
  }
}

// Remover aluno
async function removerAluno(id_aluno) {
  try {
    const response = await fetch(`/personal/removerAluno/${id_aluno}/${id_personal}`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ id_aluno }),
    });

    const result = await response.json();
    if (response.ok) {
      alert(result.message);
      location.reload();
    } else {
      console.error(result.error);
      alert('Erro ao remover aluno.');
    }
  } catch (error) {
    console.error('Erro:', error);
  }
}

  // Obtenha o seletor e a lista de alunos
const genderFilter = document.getElementById('genderFilter');
const alunosContainer = document.querySelector('section'); // Atualize conforme necessário para o container correto

// Função para filtrar alunos
function filtrarAlunosPorGenero(gender) {
  const alunos = Array.from(alunosContainer.querySelectorAll('.container')); // Todos os containers de alunos

  alunos.forEach(aluno => {
    const genero = aluno.getAttribute('data-gender'); // Obtém o gênero do atributo personalizado
    if (gender === 'all' || genero === gender) {
      aluno.classList.remove('hidden'); // Mostra o aluno
    } else {
      aluno.classList.add('hidden'); // Esconde o aluno
    }
  });
}

// Adicione evento de mudança no seletor
genderFilter.addEventListener('change', (event) => {
  filtrarAlunosPorGenero(event.target.value);
});

        </script>

  </body>
  </body>
</html>
