<!DOCTYPE html>
<html>
  <head>
    <meta lang="pt-br" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles/output.css" />
    <title>Lista de Personal</title>
  </head>

  <body class="flex flex-col min-h-screen">
    <header>
      <nav class="flex justify-between bg-zinc-800 py-5 px-4">
        <div class="flex items-center gap-4">
          <a href="/academia/menu/<%= id_academia %>"
            ><img src="/icons/back_arrow.svg"
          /></a>
          <h1 class="font-jaro text-zinc-50 text-3xl">GymFit</h1>
        </div>
      </nav>
    </header>
    <main class="mx-4 flex-grow">
      <!--Começo do perfil-->
      <section class="font-zain px-4">
        <h2 class="text-3xl text-center text-white py-2">Lista de Personal</h2>
        <!--<div class="relative w-full ">
            <input type="text" placeholder="Pesquisar pelo nome do aluno..."
              class="w-full py-1 pl-10 pr-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-gray-700 placeholder-gray-400">
            <div class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none">
              <img src="/icons/lupa.svg" class="w-5 h-5">
            </div>
          </div> -->
        <div class="relative w-full mb-4">
          <label
            for="specialtyFilter"
            class="block text-gray-700 font-semibold mb-2"
            >Filtrar por especialidade:</label
          >
          <select
            id="specialtyFilter"
            class="w-full py-2 pl-3 pr-4 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            <option value="all">Todos</option>
            <option value="esporte">esporte</option>
            <option value="hipertrofia">Hipertrofia</option>
            <option value="forca">Força</option>
            <option value="emagrecimento">Emagrecimento</option>
          </select>
        </div>
        <br />

        <!-- Renderizar alunos -->
        <% if (personais && personais.length > 0) { %> <%
        personais.forEach(personais => { %>
        <div
          data-specialty="<%= personais.especialidade %>"
          class="container bg-white rounded-lg flex items-center p-3 shadow-md w-auto mb-2"
        >
          <div
            class="rounded-full bg-pink-200 w-10 h-10 flex items-center justify-center"
          >
            <img src="/icons/user.svg" class="w-8 h-8" alt="Usuário" />
          </div>
          <span class="block text-xl text-gray-900 font-semibold"
            ><%= personais.nome %></span
          >
          <span class="text-gray-600"
            >Cod: <%= personais.id %></span
          >

          <button
            onclick="removerPersonal('<%= personais.id %>')"
            class="ml-auto bg-transparent"
          >
            <img src="/icons/delete.svg" class="w-8 h-8" />
          </button>
        </div>
        <% }) %> <% } else { %>
        <p class="text-gray-500">Nenhum personal encontrado.</p>
        <% } %>
      </section>

      <div
        id="searchModal"
        class="hidden fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center"
      >
        <div class="bg-white p-6 rounded-lg shadow-lg w-96">
          <button
            id="closeSearchModal"
            class="text-red-600 float-right font-bold"
          >
            Fechar
          </button>
          <h3 class="text-xl font-semibold mb-4">Buscar Personal</h3>
          <input
            type="text"
            id="searchInput"
            class="w-full p-2 border border-gray-300 rounded-md mb-4"
            placeholder="Buscar personal..."
          />
          <ul id="searchResults" class="max-h-60 overflow-y-auto space-y-2">
            <!-- Resultados da pesquisa serão inseridos aqui -->
          </ul>
        </div>
      </div>
    </main>
    <button
      id="openSearchModal"
      class="mx-auto bg-neonGreen rounded-xl px-4 py-2 hover:bg-neonGreenHover transition-colors text-zinc-50 font-zain text-4xl"
    >
      Adicionar</button
    ><br />

    <script>
      // Abrir aba suspensa
      document
        .getElementById("openSearchModal")
        .addEventListener("click", () => {
          document.getElementById("searchModal").classList.remove("hidden");
        });

      // Fechar aba suspensa
      document
        .getElementById("closeSearchModal")
        .addEventListener("click", () => {
          document.getElementById("searchModal").classList.add("hidden");
        });

      // Buscar personais
      document
        .getElementById("searchInput")
        .addEventListener("input", async (event) => {
          const query = event.target.value;

          if (query.length > 1) {
            try {
              const response = await fetch(
                `/personal/buscarPersonal?nome=${query}`
              );
              const personais = await response.json();

              const resultsList = document.getElementById("searchResults");
              resultsList.innerHTML = ""; // Limpa os resultados anteriores

              if (Array.isArray(personais) && personais.length > 0) {
                personais.forEach((personal) => {
                  const li = document.createElement("li");
                  li.classList.add(
                    "flex",
                    "justify-between",
                    "items-center",
                    "p-2",
                    "border-b"
                  );
                  li.innerHTML = `
              <div class="flex items-center gap-2">
              <div class="rounded-full bg-pink-200  w-10 h-10 flex items-center justify-center">
                <img src="/icons/user.svg" class="w-10 h-8" alt="Usuário">
              </div>
                <spna class="ml-4 text-2xl text-gray-900 font-semibold">${personal.nome}</span>
                  <span class="ml-4 text-xl text-gray-900 ">Cod: ${personal.id}</span>
                </div>
                <button class="bg-blue-500 text-white px py-1 rounded" onclick="inserirPersonal(${personal.id})">Selecionar</button>
              `;
                  resultsList.appendChild(li);
                });
              } else {
                resultsList.innerHTML = "<li>Nenhum personal encontrado.</li>";
              }
            } catch (error) {
              console.error("Erro ao buscar personais:", error);
            }
          }
        });

      async function inserirPersonal(id_personal) {
        const id_academia = "<%= id_academia %>";
        if (!id_academia || !id_personal) {
          alert("Erro: ID da academia ou do personal não encontrado.");
          return;
        }

        try {
          const response = await fetch(
            `/academia/inserirPersonal/${id_academia}`,
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ id_personal }),
            }
          );

          const data = await response.json();

          if (response.ok) {
            alert(data.message);
            document.getElementById("searchModal").classList.add("hidden");
            location.reload();
          } else {
            alert(
              "Erro ao adicionar personal: " +
                (data.error || "Erro desconhecido")
            );
          }
        } catch (error) {
          console.error("Erro ao adicionar personal:", error);
        }
      }

      async function removerPersonal(idPersonal) {
        const idAcademia = "<%= id_academia %>"; // Substitua pela lógica para obter o ID da academia

        const confirmar = confirm(
          "Tem certeza de que deseja remover este personal?"
        );
        if (!confirmar) return;

        try {
          const response = await fetch(
            `/academia/removerPersonal/${idPersonal}`,
            {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ idAcademia }),
            }
          );

          const data = await response.json();

          if (response.ok) {
            alert(data.message || "Personal removido com sucesso!");
            location.reload(); // Recarrega a página
          } else {
            alert(data.error || "Erro ao remover personal.");
          }
        } catch (error) {
          console.error("Erro ao remover personal:", error);
          alert("Erro inesperado. Tente novamente mais tarde.");
        }
      }
      const specialtyFilter = document.getElementById("specialtyFilter");
      const personalContainers = document.querySelectorAll(".container"); // Seleciona todos os containers de personais

      // Função para filtrar personais por especialidade
      function filtrarPersonaisPorEspecialidade(specialty) {
        personalContainers.forEach((personal) => {
          const especialidade = personal.getAttribute("data-specialty"); // Obtém o valor do atributo "data-specialty"
          if (specialty === "all" || especialidade === specialty) {
            personal.classList.remove("hidden"); // Mostra o personal
          } else {
            personal.classList.add("hidden"); // Esconde o personal
          }
        });
      }

      // Adicione evento de mudança no seletor de especialidade
      specialtyFilter.addEventListener("change", (event) => {
        filtrarPersonaisPorEspecialidade(event.target.value);
      });
    </script>
    <footer class="text-center py-4 text-sm bg-zinc-800">
      <p class="text-zinc-50">&copy Luís Felipe, Edney Araujo, Marília</p>
    </footer>
  </body>
</html>
