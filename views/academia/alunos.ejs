<!DOCTYPE html>
<html>
  <head>
    <meta lang="pt-br" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles/output.css" />
    <title>Lista de alunos</title>
  </head>
  <body class="flex flex-col min-h-screen">
    <header>
      <nav class="flex justify-between bg-zinc-800 py-5 px-4">
        <div class="flex items-center gap-4">
          <a href="/academia/menu/<%= id %>"><img src="/icons/back_arrow.svg" /></a>
          <h1 class="font-jaro text-zinc-50 text-3xl">GymFit</h1>
        </div>
      </nav>
    </header>
    <main class="mx-4 flex-grow">
      <section class="font-zain px-4">
        <h2 class="text-3xl text-center text-white py-2">Lista de alunos</h2>
        <div class="relative w-full">
          <input 
            type="text"
            placeholder="Pesquisar pelo nome do aluno..."
            class="w-full py-1 pl-10 pr-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-gray-700 placeholder-gray-400"
          />
          <div class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none">
            <img src="/icons/lupa.svg" class="w-5 h-5" />
          </div>
        </div>
        <br />
        <div >
          <% if (alunos && alunos.length > 0) { %>
            <% alunos.forEach(aluno => { %>
              <div class="flex items-center bg-white rounded-lg p-3 shadow-md mb-2">
                <div class="rounded-full bg-pink-200 w-10 h-10 flex items-center justify-center">
                  <img src="/icons/user.svg" class="w-8 h-8" alt="Usuário" />
                </div>
                <span class="ml-4 text-left text-xl text-gray-900 font-semibold">
                  <%= aluno.nome %></span>
                  <span class="ml-4 text-xl text-gray-900 ">Cod: <%= aluno.id %></span>
                
                <button 
                  onclick="removerAluno('<%= aluno.id %>')" 
                  class="ml-auto bg-transparent">
                  <img src="/icons/delete.svg" class="w-8 h-8">
                </button>
              </div>
            <% }) %>
          <% } else { %>
            <p class="text-gray-300">Nenhum aluno encontrado.</p>
          <% } %>
        </div>
        
      </section>
      <!-- Adicionar a barra de pesquisa na aba suspensa -->
      <div id="searchModal" class="hidden fixed top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center">
        <div class="bg-white p-6 rounded-lg shadow-lg w-96">
          <button id="closeSearchModal" class="text-red-600 float-right font-bold">Fechar</button>
          <h3 class="text-xl font-semibold mb-4">Buscar aluno</h3>
          <input
            type="text"
            id="searchInput"
            class="w-full p-2 border border-gray-300 rounded-md mb-4"
            placeholder="Buscar aluno..."
          />
          <ul id="searchResults" class="max-h-60 overflow-y-auto space-y-2">
            <!-- Resultados da pesquisa serão inseridos aqui -->
          </ul>
        </div>
      </div> 
    </main>
    <button
      id="openSearchModal"
      class="mx-auto bg-neonGreen rounded-xl px-4 py-2 hover:bg-neonGreenHover transition-colors text-zinc-50 font-zain text-4xl"
    >
      Adicionar
    </button>
    <br />

    <script>
      // Abrir aba suspensa
     document.getElementById('openSearchModal').addEventListener('click', () => {
      document.getElementById('searchModal').classList.remove('hidden');
    });

    // Fechar aba suspensa
    document.getElementById('closeSearchModal').addEventListener('click', () => {
      document.getElementById('searchModal').classList.add('hidden');
    });

    document.addEventListener('DOMContentLoaded', atualizarListaAlunos);


    // Buscar personais
    document.getElementById('searchInput').addEventListener('input', async (event) => {
  const query = event.target.value.trim();

  if (query.length > 1) {
    try {
      const response = await fetch(`/aluno/buscarAluno?nome=${query}`);
      const alunos = await response.json();

      const resultsList = document.getElementById('searchResults');
      resultsList.innerHTML = ''; // Limpa os resultados anteriores

      if (Array.isArray(alunos) && alunos.length > 0) {
        alunos.forEach((aluno) => {
          const li = document.createElement('li');
          li.classList.add('flex', 'justify-between', 'items-center', 'p-2', 'border-b');

          // Corrigindo o botão e nome do aluno
          li.innerHTML = `
            <div class="flex items-center gap-2">
              <div class="rounded-full bg-pink-200 w-10 h-10 flex items-center justify-center">
                <img src="/icons/user.svg" class="w-7 h-8" alt="Usuário">
              </div>
              <span>${aluno.nome}</span><span>Cod: ${aluno.id}</span>
            </div>
            <button 
              class="bg-blue-500 text-white px-2 py-1 rounded" 
             onclick="inserirAluno(&quot;${aluno.id}&quot;)">
              Selecionar
            </button>
          `;

          resultsList.appendChild(li);
        });
      } else {
        resultsList.innerHTML = '<li class="text-gray-500">Nenhum aluno encontrado.</li>';
      }
    } catch (error) {
      console.error('Erro ao buscar alunos:', error);
    }
  }
});



    async function atualizarListaAlunos() {
  const idAcademia = '<%= id %>'; // ID da academia da URL

  try {
    const response = await fetch(`/academia/findStudents/${idAcademia}`);
    const alunos = await response.json();

    const listaAlunos = document.querySelector('.alunos'); // Div que contém a lista
    listaAlunos.innerHTML = ''; // Limpa a lista atual

    if (alunos.length > 0) {
      alunos.forEach((aluno) => {
        const div = document.createElement('div');
        div.classList.add('container', 'bg-white', 'rounded-lg', 'p-3', 'shadow-md', 'w-auto', 'mb-2');
        div.innerHTML = `
          <div class="rounded-full bg-pink-200 flex-shrink-0 w-10 h-10">
            <img src="/icons/user.svg" class="w-10 h-8" alt="Usuário" />
          </div>
          <span class="ml-4 text-2xl text-gray-900 font-semibold">${aluno.nome}</span>
        `;
        listaAlunos.appendChild(div);
      });
    } else {
      listaAlunos.innerHTML = '<p class="text-gray-500">Nenhum aluno encontrado.</p>';
    }
  } catch (error) {
    console.error('Erro ao atualizar lista de alunos:', error);
  }
}




    async function adicionarAluno(idAluno) {
  const idAcademia = '<%= academia.id %>';  // Pega o idAcademia do EJS
  
  if (!idAcademia || !idAluno) {
    alert('Erro: ID da academia ou do aluno não encontrado.');
    return;
  }

  try {
    // Fazendo uma requisição POST para o backend com os dados
    const response = await fetch('/academia/adicionarAluno', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
<<<<<<< HEAD
      body: JSON.stringify({ id_aluno, id_academia }),  // Passa os dados como JSON
=======
      body: JSON.stringify({ idAcademia, idAluno }),  // Passa os dados como JSON
>>>>>>> 588cf7212f6cbcf2108c96d532fba40dc4f3ffff
    });

    const data = await response.json();  // Converte a resposta em JSON

    if (response.ok) {
      alert(data.message);  // Exibe mensagem de sucesso

      document.getElementById('searchModal').classList.add('hidden');
<<<<<<< HEAD
      location.reload(); //
=======
      atualizarListaAlunos();
>>>>>>> 588cf7212f6cbcf2108c96d532fba40dc4f3ffff
    } else {
      alert('Erro ao adicionar aluno: ' + (data.error || 'Erro desconhecido'));
    }
  } catch (error) {
    console.error('Erro ao adicionar aluno:', error);
  }
} 

async function removerAluno(idAluno) {
  const idAcademia = '54'; // Substitua pela lógica para obter o ID da academia

  const confirmar = confirm("Tem certeza de que deseja remover este aluno?");
  if (!confirmar) return;

  try {
    const response = await fetch(`/academia/removerAluno/${idAluno}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ idAcademia }),
    });

    const data = await response.json();

    if (response.ok) {
      alert(data.message || "Aluno removido com sucesso!");
      location.reload(); // Recarrega a página
    } else {
      alert(data.error || "Erro ao remover aluno.");
    }
  } catch (error) {
    console.error("Erro ao remover aluno:", error);
    alert("Erro inesperado. Tente novamente mais tarde.");
  }
}

    </script>
  </body>
</html>
