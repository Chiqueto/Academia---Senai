<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles/output.css" />
    <title>Lista de Alunos</title>
  </head>
  <body class="flex flex-col min-h-screen">
    <header>
      <nav class="flex justify-between bg-zinc-800 py-5 px-4">
        <div class="flex items-center gap-4">
          <a href="/academia/menu/<%= id %>">
            <img src="/icons/back_arrow.svg" alt="Voltar" />
          </a>
          <h1 class="font-jaro text-zinc-50 text-3xl">GymFit</h1>
        </div>
      </nav>
    </header>
    <main class="mx-4 flex-grow">
      <section class="font-zain px-4">
<<<<<<< HEAD
        <h2 class="text-3xl text-center text-white py-2">Lista de Alunos</h2>
        <div class="relative w-full mb-6">
          <input 
            type="text" 
            id="search-bar" 
            placeholder="Pesquisar alunos por nome ou ID" 
            oninput="buscarAlunos()" 
            class="w-full py-3 pl-10 pr-4 border border-gray-300 rounded-lg text-gray-800 focus:outline-none focus:ring-2 focus:ring-pink-500"
=======
        <h2 class="text-3xl text-center text-white py-2">Lista de alunos</h2>
        <div class="relative w-full">
          <input 
            type="text"
            placeholder="Pesquisar pelo nome do aluno..."
            class="w-full py-1 pl-10 pr-4 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white text-gray-700 placeholder-gray-400"
>>>>>>> d55c6d70f163823bef41f242a8bcaac3a33e2a96
          />
          <div class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none">
            <img src="/icons/lupa.svg" class="w-5 h-5" />
          </div>
        </div>
        
        <br />
<<<<<<< HEAD
        <div class="alunos">
=======
        <div >
>>>>>>> d55c6d70f163823bef41f242a8bcaac3a33e2a96
          <% if (alunos && alunos.length > 0) { %>
          <% alunos.forEach(aluno => { %>
          <div class="container bg-white rounded-lg flex items-center p-3 shadow-md w-auto mb-2">
            <div class="rounded-full bg-pink-200 flex-shrink-0 w-10 h-10">
              <img src="/icons/user.svg" class="w-10 h-8" alt="Usuário" />
            </div>
            <span class="ml-4 text-2xl text-gray-900 font-semibold">
              <%= aluno.nome %>
            </span>
          </div>
          <% }) %>
          <% } else { %>
            <p class="text-gray-300">Nenhum aluno encontrado.</p>
          <% } %>
        </div>
        
      </section>
      <!-- Modal de busca -->
      <div id="searchModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <div class="bg-white p-6 rounded-lg shadow-lg w-96 relative">
          <button 
            id="closeSearchModal" 
            class="absolute top-2 right-2 text-gray-500 hover:text-gray-800 text-lg font-bold"
          >
            ×
          </button>
          <h3 class="text-xl font-semibold mb-4">Buscar Aluno</h3>
          <input 
            type="text" 
            id="searchInput" 
            placeholder="Digite para buscar..." 
            class="w-full py-2 px-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 mb-4"
          />
          <ul id="searchResults" class="max-h-60 overflow-y-auto space-y-2 text-gray-800">
            <li class="bg-gray-100 p-2 rounded-lg shadow hover:bg-gray-200 transition duration-300">
              Nome do Aluno
            </li>
          </ul>
        </div>
      </div>
      
    </main>
    <!-- <form action="/academia/adicionarAluno" method="POST">
      <input type="hidden" name="idAcademia" value="<%= academia.id %>" />
     
      <button type="submit">Adicionar</button>
    </form> -->

    <!-- Formulário para adicionar aluno -->
    <form id="adicionarAluno" class="mt-6 flex items-center gap-4">
      <label for="idAluno" class="text-lg font-medium text-gray-800">ID do Aluno:</label>
      <input 
        type="text" 
        id="aluno.id" 
        name="aluno.id" 
        required 
        class="py-2 px-4 border border-gray-300 rounded-lg text-gray-800 focus:outline-none focus:ring-2 focus:ring-pink-500"
      />
      <button 
        type="button" 
        onclick="adicionarAluno()" 
        class="bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600 transition duration-300"
      >
        Adicionar Aluno
      </button>
    </form>
    
    
    <script>
      // Abrir modal
      document
        .getElementById("openSearchModal")
        .addEventListener("click", () => {
          document.getElementById("searchModal").classList.remove("hidden");
        });

      // Fechar modal
      document
        .getElementById("closeSearchModal")
        .addEventListener("click", () => {
          document.getElementById("searchModal").classList.add("hidden");
        });

<<<<<<< HEAD
      // Atualizar lista de alunos
      async function atualizarListaAlunos() {
        const idAcademia = "<%= id %>";
        try {
          const response = await fetch(`/academia/findStudents/${idAcademia}`);
          const alunos = await response.json();
          const listaAlunos = document.querySelector(".alunos");
          listaAlunos.innerHTML = "";
          if (alunos.length > 0) {
            alunos.forEach((aluno) => {
              const div = document.createElement("div");
              div.classList.add(
                "container",
                "bg-white",
                "rounded-lg",
                "p-3",
                "shadow-md",
                "w-auto",
                "mb-2"
              );
              div.innerHTML = `
                <div class="rounded-full bg-pink-200 flex-shrink-0 w-10 h-10">
                  <img src="/icons/user.svg" class="w-10 h-8" alt="Usuário" />
                </div>
                <span class="ml-4 text-2xl text-gray-900 font-semibold">${aluno.nome}</span>
              `;
              listaAlunos.appendChild(div);
            });
          } else {
            listaAlunos.innerHTML =
              '<p class="text-gray-500">Nenhum aluno encontrado.</p>';
          }
        } catch (error) {
          console.error("Erro ao atualizar lista de alunos:", error);
        }
      }

// Função para busca
function buscarAlunos() {
            const query = document.getElementById("search-bar").value.toLowerCase();
            const studentItems = document.querySelectorAll(".alunos .container");

            studentItems.forEach(item => {
                const text = item.textContent.toLowerCase();
                item.style.display = text.includes(query) ? "flex" : "none";
            });
        }
=======
    document.addEventListener('DOMContentLoaded', atualizarListaAlunos);


    // Buscar personais
    document.getElementById('searchInput').addEventListener('input', async (event) => {
  const query = event.target.value.trim();

  if (query.length > 1) {
    try {
      const response = await fetch(`/aluno/buscarAluno?nome=${query}`);
      const alunos = await response.json();

      const resultsList = document.getElementById('searchResults');
      resultsList.innerHTML = ''; // Limpa os resultados anteriores

      if (Array.isArray(alunos) && alunos.length > 0) {
        alunos.forEach((aluno) => {
          const li = document.createElement('li');
          li.classList.add('flex', 'justify-between', 'items-center', 'p-2', 'border-b');

          // Corrigindo o botão e nome do aluno
          li.innerHTML = `
            <div class="flex items-center gap-2">
              <div class="rounded-full bg-pink-200 w-10 h-10 flex items-center justify-center">
                <img src="/icons/user.svg" class="w-7 h-8" alt="Usuário">
              </div>
              <span class="ml-4 text-2xl text-gray-900 font-semibold">${aluno.nome}</span>
              <span class="ml-4 text-xl text-gray-900 ">Cod: ${aluno.id}</span>
            </div>
            <button 
              class="bg-blue-500 text-white px-2 py-1 rounded" 
             onclick="inserirAluno(&quot;${aluno.id}&quot;)">
              Selecionar
            </button>
          `;

          resultsList.appendChild(li);
        });
      } else {
        resultsList.innerHTML = '<li class="text-gray-500">Nenhum aluno encontrado.</li>';
      }
    } catch (error) {
      console.error('Erro ao buscar alunos:', error);
    }
  }
});
>>>>>>> d55c6d70f163823bef41f242a8bcaac3a33e2a96


      // Adicionar aluno
      async function adicionarAluno() {
        const idAluno = document.getElementById("aluno.id").value;
        const idAcademia = "<%= id %>";
        if (!idAluno) {
                alert("Por favor, insira o ID do aluno.");
                return;
            }

        try {
          const response = await fetch(`/academia/adicionarAluno/${idAcademia}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ idAluno }),
          });
          const result = await response.json();
          if (response.ok) {
            alert(result.message);
            //document.getElementById("searchModal").classList.add("hidden");
            atualizarListaAlunos();
          } else {
            alert("Erro: " + result.error || "Erro desconhecido.");
          }
        } catch (error) {
          console.error("Erro ao adicionar aluno:", error);
        }
      }

      // Função para remover aluno
      function removerAluno(idAluno) {
            const idAcademia = "<%= id %>"; // Captura o ID da academia pela URL

            fetch(`/academia/${idAcademia}/alunos/${idAluno}`, {
                method: "DELETE"
            })
            .then(response => {
                if (response.ok) {
                    location.reload(); // Recarregar a página para refletir as alterações
                } else {
                    alert("Erro ao remover aluno.");
                }
            });
        }

<<<<<<< HEAD
      document.addEventListener("DOMContentLoaded", atualizarListaAlunos);
=======
    if (alunos.length > 0) {
      alunos.forEach((aluno) => {
        const div = document.createElement('div');
        div.classList.add('container', 'bg-white', 'rounded-lg', 'p-3', 'shadow-md', 'w-auto', 'mb-2');
        div.innerHTML = `
          <div class="rounded-full bg-pink-200 flex-shrink-0 w-10 h-10">
            <img src="/icons/user.svg" class="w-10 h-8" alt="Usuário" />
          </div>
          <span class="ml-4 text-2xl text-gray-900 font-semibold">${aluno.nome}</span>
        `;
        listaAlunos.appendChild(div);
      });
    } else {
      listaAlunos.innerHTML = '<p class="text-gray-500">Nenhum aluno encontrado.</p>';
    }
  } catch (error) {
    console.error('Erro ao atualizar lista de alunos:', error);
  }
}




    async function adicionarAluno(idAluno) {
  const idAcademia = '<%= academia.id %>';  // Pega o idAcademia do EJS
  
  if (!idAcademia || !idAluno) {
    alert('Erro: ID da academia ou do aluno não encontrado.');
    return;
  }

  try {
    // Fazendo uma requisição POST para o backend com os dados
    const response = await fetch('/academia/adicionarAluno', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ id_aluno, id_academia }),  // Passa os dados como JSON
    });

    const data = await response.json();  // Converte a resposta em JSON

    if (response.ok) {
      alert(data.message);  // Exibe mensagem de sucesso

      document.getElementById('searchModal').classList.add('hidden');
      location.reload(); //
    } else {
      alert('Erro ao adicionar aluno: ' + (data.error || 'Erro desconhecido'));
    }
  } catch (error) {
    console.error('Erro ao adicionar aluno:', error);
  }
} 

async function removerAluno(idAluno) {
  const idAcademia = '54'; // Substitua pela lógica para obter o ID da academia

  const confirmar = confirm("Tem certeza de que deseja remover este aluno?");
  if (!confirmar) return;

  try {
    const response = await fetch(`/academia/removerAluno/${idAluno}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ idAcademia }),
    });

    const data = await response.json();

    if (response.ok) {
      alert(data.message || "Aluno removido com sucesso!");
      location.reload(); // Recarrega a página
    } else {
      alert(data.error || "Erro ao remover aluno.");
    }
  } catch (error) {
    console.error("Erro ao remover aluno:", error);
    alert("Erro inesperado. Tente novamente mais tarde.");
  }
}

>>>>>>> d55c6d70f163823bef41f242a8bcaac3a33e2a96
    </script>
  </body>
</html>
