<!DOCTYPE html>
<html>
  <head>
    <meta lang="pt-br" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="/styles/output.css" rel="stylesheet" />
    <title><%= treino.nome %></title>
  </head>
  <body class="flex flex-col min-h-screen bg-zinc-900 text-zinc-50">
    <!-- Cabeçalho -->
    <header>
      <nav class="flex justify-between bg-zinc-800 py-5 px-4 items-center">
        <div class="flex items-center gap-4">
          <a href="/aluno/meusTreinos/<%= id_aluno %>"
            ><img src="/icons/back_arrow.svg"
          /></a>
          <h1 class="font-jaro text-zinc-50 text-3xl">GymFit</h1>
          <!-- <img src="/icons/GymFit.svg" /> -->
          <!-- Tag de Concluído -->
        </div>
        <% if (status === "concluido") { %>
        <span
          class="inline-flex items-center justify-center bg-green-500 text-white text-sm font-semibold rounded-full px-4 py-1 shadow-md"
          >✔ Concluído</span
        >
        <% } else if(status === "inativo"){ %>
        <span
          class="inline-flex items-center justify-center bg-red-500 text-white text-sm font-semibold rounded-full px-4 py-1 shadow-md"
          >X Não iniciado</span
        >
        <% } else { %>
        <span
          class="inline-flex items-center justify-center bg-amber-500 text-white text-sm font-semibold rounded-full px-4 py-1 shadow-md"
          >! Em andamento</span
        >
        <% } %>
      </nav>
    </header>

    <!-- Conteúdo principal -->
    <main class="mx-4 flex-grow">
      <section class="text-center py-6">
        <!-- Título do Treino -->
        <h2 class="text-3xl font-bold"><%= treino.nome %></h2>
      </section>

      <!-- Lista de Exercícios -->
      <section>
        <ul class="flex flex-col gap-4 text-zinc-950">
          <% exercicios.forEach((exercicio, index) => { %>
          <a
            href="/aluno/meusTreinos/<%= id_aluno %>/treino/<%= treino.id %>/exercicios/<%= exercicio.id %>"
          >
            <li
              class="bg-zinc-200 p-4 rounded-lg shadow-lg flex items-center justify-between hover:bg-zinc-300 transition-colors"
            >
              <div class="flex items-center gap-4">
                <!-- Ícone do exercício -->
                <div
                  class="bg-rose-200 p-3 rounded-full flex justify-center items-center w-12 h-12"
                >
                  <img
                    src="/icons/weight.svg"
                    alt="Exercício"
                    class="w-6 h-6"
                  />
                </div>
                <!-- Nome do exercício -->
                <div>
                  <h3 class="text-2xl font-bold"><%= exercicio.nome %></h3>
                </div>
              </div>

              <!-- Contador de séries -->
              <span class="text-3xl font-bold font-zain">
                <%= exercicio.seriesFeitas %>/<%= exercicio.series %>
              </span>
            </li>
          </a>
          <% }) %>
        </ul>
      </section>
    </main>

    <!-- Botão Dinâmico -->
    <div class="p-4">
      <% if (status === "inativo") { %>
      <!-- Botão de Iniciar -->
      <button
        type="button"
        onclick="iniciarTreino()"
        class="bg-green-500 w-full py-3 rounded-lg text-xl font-bold hover:bg-green-600 transition-colors"
      >
        Iniciar
      </button>
      <% } else if (status === "iniciado") { %>
      <!-- Botões de Cancelar e Concluir -->
      <div class="flex gap-4">
        <button
          type="button"
          onclick="openCancelModal()"
          class="bg-red-500 flex-1 py-3 rounded-lg text-xl font-bold hover:bg-red-600 transition-colors"
        >
          Cancelar
        </button>
        <button
          type="button"
          onclick="concluirTreino()"
          class="bg-green-500 flex-1 py-3 rounded-lg text-xl font-bold hover:bg-green-600 transition-colors"
        >
          Concluir
        </button>
      </div>
      <% } else if (status === "concluido") { %>
      <!-- Botões de Sair -->
      <button
        type="button"
        onclick="window.location.href = '/aluno/meusTreinos/<%= id_aluno %>'"
        class="bg-red-500 flex-1 w-full py-3 rounded-lg text-xl font-bold hover:bg-red-600 transition-colors"
      >
        Sair
      </button>
      <% } %>
    </div>

    <!-- Modal de Sucesso -->
    <div
      id="confirm-modal"
      class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden"
    >
      <div class="bg-white p-6 rounded-lg text-center">
        <h3 id="modal-message" class="text-2xl font-bold text-green-600"></h3>
        <button
          onclick="finalizarMesmoAssim()"
          id="confirm-workout-modal"
          class="mt-4 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700"
        >
          Concluir mesmo assim
        </button>
        <button
          onclick="cancelarTreino()"
          id="cancel-modal"
          class="mt-4 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 hidden"
        >
          Cancelar mesmo assim
        </button>
        <button
          onclick="closeModal()"
          id="close-modal"
          class="mt-4 bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700"
        >
          Não concluir
        </button>
      </div>
    </div>

    <!-- Rodapé -->
    <footer class="text-center py-4 text-sm bg-zinc-800">
      
      <p>
        Início: <%= treinoStatus ? new
        Date(treinoStatus.hr_inicio).toLocaleTimeString('pt-BR', { hour:
        '2-digit', minute: '2-digit' }) : "Não iniciado" %> | Tempo: <% if
        (status === "concluido") { const inicio = new
        Date(treinoStatus.hr_inicio); const conclusao = new
        Date(treinoStatus.hr_conclusao); const diffMs = conclusao - inicio;
        const diffHrs = Math.floor(diffMs / 3600000); const diffMins =
        Math.floor((diffMs % 3600000) / 60000); const diffSecs =
        Math.floor((diffMs % 60000) / 1000); %> <%=
        `${String(diffHrs).padStart(2, '0')}:${String(diffMins).padStart(2,
        '0')}:${String(diffSecs).padStart(2, '0')}` %> <% } else { %>
        <span id="tempo-decorrido">00:00:00</span>
        <% } %>
        <p>&copy; 2024 Luís Felipe, Edney Araujo, Marília</p>
      </p>
    </footer>

    <script>
                              async function iniciarTreino() {
                                event.preventDefault();
                                const res = await fetch(
                                  "/treino/iniciarTreino/<%= id_aluno %>/<%= treino.id %>",
                                  {
                                    method: "POST",
                                  }
                                );
                                console.log(res);
                                window.location.reload();
                              }

                              function openCancelModal() {
                                const modal = document.getElementById("confirm-modal");
                                const modalMessage = document.getElementById("modal-message");
                                const btnConfirmar = document.getElementById("confirm-workout-modal");
                                const btnCancela = document.getElementById("close-modal");
                                const btnCancelaMesmo = document.getElementById("cancel-modal");
                                modal.classList.remove("hidden");
                                btnConfirmar.classList.add("hidden");
                                // btnCancela.classList.add("hidden");
                                btnCancela.textContent = "Não cancelar";
                                btnCancelaMesmo.classList.remove("hidden");
                                modalMessage.textContent =
                                  "Ao cancelar, você perderá o progresso do treino!";
                              }

                              async function cancelarTreino() {
                                event.preventDefault();
                                const res = await fetch(
                                  "/treino/cancelarTreino/<%= id_aluno %>/<%= treino.id %>",
                                  {
                                    method: "DELETE",
                                  }
                                );
                                window.location.reload();
                                // console.log(res);
                                // window.location.href = "/aluno/meusTreinos/<%= id_aluno %>";
                              }

                              async function concluirTreino() {
                                event.preventDefault();

                                const modal = document.getElementById("confirm-modal");
                                const modalMessage = document.getElementById("modal-message");
                                const btnConfirmar = document.getElementById("confirm-workout-modal");
                                const btnCancela = document.getElementById("close-modal");
                                const btnCancelaMesmo = document.getElementById("cancel-modal");

                                btnCancela.textContent = "Voltar";
                                btnCancelaMesmo.classList.add("hidden");
                                btnConfirmar.classList.remove("hidden");
                                const response = await fetch(
                                  "/treino/verificaSerie/<%= id_aluno %>/<%= treino.id %>",
                                  {
                                    method: "GET",
                                  }
                                );

                                const statusTreino = await response.json();

                                console.log(statusTreino.data.statusTreino);

                                if (statusTreino.data.statusTreino === "finalizado") {
                                  const res = await fetch(
                                    "/treino/concluirTreino/<%= id_aluno %>/<%= treino.id %>",
                                    {
                                      method: "PUT",
                                    }
                                  );
                                  modalMessage.textContent = "Treino finalizado com sucesso!";
                                  modal.classList.remove("hidden");
                                  btnConfirmar.classList.add("hidden");
                                  btnCancela.classList.add("hidden");
                                  // Recarrega a página automaticamente após 3 segundos
                                  setTimeout(() => {
                                    window.location.reload();
                                  }, 1500);
                                } else {
                                  // Exibe a mensagem no modal
                                  modalMessage.textContent = "Você não concluiu todas as séries!";
                                  modal.classList.remove("hidden");
                                  btnConfirmar.classList.remove("hidden");
                                  btnCancela.classList.remove("hidden");
                                }
                              }

                              async function finalizarMesmoAssim() {
                                event.preventDefault();

                                const modal = document.getElementById("confirm-modal");
                                const modalMessage = document.getElementById("modal-message");
                                const confirmModal = document.getElementById("confirm-workout-modal");
                                const closeModal = document.getElementById("close-modal");
                                const res = await fetch(
                                  "/treino/concluirTreino/<%= id_aluno %>/<%= treino.id %>",
                                  {
                                    method: "PUT",
                                  }
                                );
                                confirmModal.classList.add("hidden");
                                closeModal.classList.add("hidden");
                                modalMessage.textContent = "Treino finalizado com sucesso!";
                                modal.classList.remove("hidden");

                                // Recarrega a página automaticamente após 3 segundos
                                setTimeout(() => {
                                  window.location.reload();
                                }, 1000);
                              }

                              function closeModal() {
                                const modal = document.getElementById("confirm-modal");
                                modal.classList.add("hidden");
                              }

      // Função para atualizar o tempo decorrido
      function atualizarTempoDecorrido(hr_inicio) {
        const tempoDecorridoEl = document.getElementById("tempo-decorrido");

        // Formata o hr_inicio para o formato desejado
        function formatarDataParaISO(data) {
          const dataObj = new Date(data);
          const ano = dataObj.getFullYear();
          const mes = String(dataObj.getMonth() + 1).padStart(2, "0");
          const dia = String(dataObj.getDate()).padStart(2, "0");
          const horas = String(dataObj.getHours()).padStart(2, "0");
          const minutos = String(dataObj.getMinutes()).padStart(2, "0");
          const segundos = String(dataObj.getSeconds()).padStart(2, "0");

          return `${ano}-${mes}-${dia}T${horas}:${minutos}:${segundos}`;
        }

        const inicioFormatado = formatarDataParaISO(hr_inicio);
        const inicio = new Date(inicioFormatado);

        // Função para atualizar o tempo no DOM
        function atualizar() {
          const agoraAtualizado = new Date();
          const diffMs = agoraAtualizado - inicio; // Diferença entre agora e o horário de início
          const diffHrs = Math.floor(diffMs / 3600000);
          const diffMins = Math.floor((diffMs % 3600000) / 60000);
          const diffSecs = Math.floor((diffMs % 60000) / 1000);

          const horas = String(diffHrs).padStart(2, "0");
          const minutos = String(diffMins).padStart(2, "0");
          const segundos = String(diffSecs).padStart(2, "0");

          tempoDecorridoEl.textContent = `${horas}:${minutos}:${segundos}`;

          console.log("inicio formatado: " + inicioFormatado);
          console.log("inicio original: " + inicio);
          console.log("agora: " + agoraAtualizado);
          console.log(`Tempo: ${horas}:${minutos}:${segundos}`);
        }

        atualizar(); // Chama a função imediatamente
        setInterval(atualizar, 1000); // Atualiza a cada segundo
      }

      // Chama a função se o treino estiver iniciado
      <% if (status === "iniciado" && treinoStatus) { %>
      atualizarTempoDecorrido("<%= treinoStatus.hr_inicio %>");
      <% } %>
    </script>
  </body>
</html>
